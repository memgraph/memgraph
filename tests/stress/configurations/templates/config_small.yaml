memgraph:
  deployment:
    type: standalone
  installation:
    type: binary
  args:
    - "--telemetry-enabled=false"
    - "--bolt-server-name-for-init=Neo4j/"
    - "--storage-properties-on-edges=true"
    - "--storage-snapshot-on-exit=true"
    - "--storage-snapshot-interval-sec=600"
    - "--storage-snapshot-retention-count=1"
    - "--storage-wal-enabled=true"
    - "--data-recovery-on-startup=false"
    - "--query-execution-timeout-sec=1200"
    - "--log-file=stress_test.log"
    - "--log-level=TRACE"
    - "--also-log-to-stderr=true"
    - "--data-directory=stress_data"

general:
  verbose: false
  use_ssl: false

dataset:
  tests:
    - name: bipartite.py
      test_args:
        - "--u-count=100"
        - "--v-count=100"
      timeout_min: 5
    - name: detach_delete.py
      test_args:
        - "--worker-count=4"
        - "--repetition-count=100"
      timeout_min: 5
    - name: memory_tracker.py
      test_args:
        - "--worker-count=5"
        - "--repetition-count=100"
      memgraph_args:
        - "--memory-limit=2048"
      timeout_min: 5
    - name: memory_limit.py
      test_args:
        - "--worker-count=5"
        - "--repetition-count=100"
      memgraph_args:
        - "--memory-limit=2048"
      timeout_min: 5
    - name: create_match.py
      test_args:
        - "--vertex-count=40000"
        - "--create-pack-size=100"
      timeout_min: 5
    - name: parser.cpp
      test_args:
        - "--per-worker-query-count=1000"
      timeout_min: 5
    - name: long_running.cpp
      test_args:
        - "--vertex-count=1000"
        - "--edge-count=5000"
        - "--max-time=1"
        - "--verify=20"
        - "--stats-file=.long_running_stats"
      timeout_min: 5
    - name: long_running.cpp
      test_args:
        - "--vertex-count=10000"
        - "--edge-count=50000"
        - "--max-time=2"
        - "--verify=30"
        - "--stats-file=.long_running_stats"
      timeout_min: 5

customWorkloads:
  tests:
    # Copied from configurations/workloads/performance/supernode_edge_abort.yaml
    - name: supernode-edge-abort
      memgraph_args: ["--memory-limit=4000"]
      import:
        queries: ["UNWIND range(1, 1000000) as x CREATE (:Node {id: x})"]
      workers:
        - name: fully-connect
          type: writer
          query: "MATCH (n1) MATCH (n2) CREATE (n1)-[:IS_CONNECTED_TO]->(n2)"
          num_repetitions: 1
          sleep_millis: 0
      timeout_min: 2
    # Copied from configurations/workloads/deadlock/show_replicas_deadlock.yaml
    - name: show-replicas-deadlock
      memgraph_args: []
      import:
        queries: ["CREATE INDEX ON :Node;", "CREATE INDEX ON :Node(id);"]
      workers:
        - name: periodic-import
          type: writer
          query: "USING PERIODIC COMMIT 1000 UNWIND range(1, 1000000) as x CREATE (:Node {id: x});"
          num_repetitions: 1
          sleep_millis: 0
        - name: lab-simulator
          type: lab-simulator
          num_repetitions: 100
          sleep_millis: 500
        - name: show-replicas
          type: reader
          query: "SHOW REPLICAS;"
          num_repetitions: 100
          sleep_millis: 500
      timeout_min: 2
