memgraph:
  deployment:
    type: standalone
  installation:
    type: default
  args:
    - "--telemetry-enabled=false"
    - "--bolt-num-workers=10"
    - "--bolt-server-name-for-init=Neo4j/"
    - "--storage-properties-on-edges=true"
    - "--storage-snapshot-on-exit=false"
    - "--storage-snapshot-interval-sec=600"
    - "--storage-snapshot-retention-count=1"
    - "--storage-wal-enabled=true"
    - "--query-execution-timeout-sec=1200"
    - "--log-level=ERROR"
    - "--also-log-to-stderr=true"
    - "--log-file=stress_test.log"
    - "--data-directory=stress_data"


general:
  verbose: false
  use_ssl: false

dataset:
  tests: []

customWorkloads:
  tests:
    - name: single-tenant-high-load
      memgraph_args: []
      import:
        queries: []
      # 100 iterations x (2 nodes + 1 edge) = 200 nodes, 100 edges
      # repetitions 1000 -> 200k nodes and 100k edges
      # 20 workers -> 4M nodes and 2M edges
      workers:
        - name: high-load-worker
          type: writer
          step: 1
          query: >
            UNWIND range(1, 100) as x
            CREATE (:Node {int_prop: x, str_prop: "hehe", my_map: {gender: "M", age: 25, nested: {prop: 1}}})-[:HAS_TYPE]->(:Node {int_prop: x, str_prop: "hehe", my_map: {gender: "M", age: 25, nested: {prop: 1}}});
          num_repetitions: 10000
          sleep_millis: 0
          replicas: 20
      timeout_min: 100
