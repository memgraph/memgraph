name: Release build test
concurrency:
  group: ${{ github.workflow }}-${{ github.ref_name }}
  cancel-in-progress: true

on:
  push:
    tags:
      - "v*.*.*-rc*"
      - "v*.*-rc*"
  schedule:
    - cron: "0 22 * * *" #UTC
  workflow_dispatch:
    inputs:
      build_type:
        type: choice
        description: "Memgraph Build type. Default value is Release."
        default: Release
        options:
          - Release
          - RelWithDebInfo
      os:
        type: choice
        description: "Target OS on which the release tests will be run."
        default: debian-11
        options:
          - all
          - centos-9
          - debian-11
          - debian-12
          - fedora-38
          - fedora-39
          - rocky-9.3
          - ubuntu-20.04
          - ubuntu-22.04
          - ubuntu-24.04
      trigger_daily_packaging:
        type: boolean
        description: "Set to true to trigger the daily packaging jobs for testing purposes."
        default: false

jobs:
  # this job is used to get the current date at the time when the job is first triggered
  # so that the daily build is sent to the right folder!
  # (we may cross over midnight during build/test)
  CurrentDateJob:
    if: ${{ github.event_name == 'schedule' || github.event.inputs.trigger_daily_packaging == 'true' }}
    runs-on: [self-hosted]
    outputs:
      current_date: ${{ steps.set_date.outputs.current_date }}
    steps:
      - name: Get current date
        id: set_date
        run: |
          current_date=$(date +'%Y%m%d')
          echo "Current date is: $current_date"
          echo "current_date=$current_date" >> $GITHUB_OUTPUT

  TestIndividual:
    if: ${{ (!github.event.inputs.os || github.event.inputs.os != 'all') && !contains(github.event.head_commit.message, '[skip tests]') }}
    uses: ./.github/workflows/reusable_release_tests.yaml
    with:
      os: ${{ github.event.inputs.os || 'debian-11' }}
      toolchain: v6
      arch: amd
      threads: 24
      build_type: ${{ github.event.inputs.build_type || 'Release' }}
    secrets: inherit

  TestAll:
    if: ${{ github.event.inputs.os == 'all' }}
    strategy:
      matrix:
        os: [centos-9, debian-11, debian-12, fedora-38, fedora-39, rocky-9.3, ubuntu-20.04, ubuntu-22.04, ubuntu-24.04]
    uses: ./.github/workflows/reusable_release_tests.yaml
    with:
      os: ${{ matrix.os }}
      toolchain: v6
      arch: amd
      threads: 24
      build_type: ${{ github.event.inputs.build_type || 'Release' }}
    secrets: inherit

  PackageArtifact:
    if: github.ref_type == 'tag'
    needs: [TestIndividual]
    strategy:
      fail-fast: false
      matrix:
        os: [centos-9, centos-10, debian-11, debian-12, fedora-41, ubuntu-22.04, ubuntu-24.04]
        arch: [amd]
        build_type: [Release]
        additional_build_args: ['']
        include: # Add arm builds and RelwithDebInfo builds
          - os: debian-11
            build_type: Release
            arch: arm
            additional_build_args: ''
          - os: debian-12
            build_type: Release
            arch: arm
            additional_build_args: ''
          - os: ubuntu-24.04
            build_type: Release
            arch: arm
            additional_build_args: ''
          - os: ubuntu-24.04
            build_type: Release
            arch: amd
            additional_build_args: '--disable-jemalloc'
          - os: ubuntu-24.04
            build_type: RelWithDebInfo
            arch: arm
            additional_build_args: ''
          - os: ubuntu-24.04
            build_type: RelWithDebInfo
            arch: amd
            additional_build_args: ''
    uses: ./.github/workflows/reusable_package.yaml
    with:
      os: ${{ matrix.os }}
      arch: ${{ matrix.arch }}
      build_type: ${{ matrix.build_type }}
      toolchain: v6
      push_to_github: 'false'
      push_to_s3: 'true'
      s3_bucket: deps.memgraph.io
      s3_region: eu-west-1
      s3_dest_dir: "memgraph/${{ github.ref_name }}"
      additional_build_args: ${{ matrix.additional_build_args }}
    secrets: inherit

  DockerArtifact:
    if: github.ref_type == 'tag'
    needs: [TestIndividual]
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-24.04]
        arch: [amd, arm]
        build_type: [Release]
        include: # Add RelwithDebInfo build for amd docker image
          - os: ubuntu-24.04
            arch: amd
            build_type: RelWithDebInfo
    uses: ./.github/workflows/reusable_package.yaml
    with:
      os: ${{ matrix.os }}
      arch: ${{ matrix.arch }}
      build_type: ${{ matrix.build_type }}
      toolchain: v6
      additional_build_args: '--for-docker'
      push_to_github: 'false'
      push_to_s3: 'true'
      s3_bucket: deps.memgraph.io
      s3_region: eu-west-1
      s3_dest_dir: "memgraph/${{ github.ref_name }}"
    secrets: inherit


  DailyPackageArtifact:
    if:  (github.event_name == 'schedule' || github.event.inputs.trigger_daily_packaging == 'true') && always()
    needs: [CurrentDateJob]
    strategy:
      fail-fast: false
      matrix:
        os: [centos-9, centos-10, debian-11, debian-12, fedora-41, ubuntu-22.04, ubuntu-24.04]
        arch: [amd]
        build_type: [Release]
        additional_build_args: ['']
        include: # Additional matrix entries for arm builds and RelWithDebInfo
          - os: debian-11
            build_type: Release
            arch: arm
            additional_build_args: ''
          - os: debian-12
            build_type: Release
            arch: arm
            additional_build_args: ''
          - os: ubuntu-24.04
            build_type: Release
            arch: arm
            additional_build_args: ''
          - os: ubuntu-24.04
            build_type: Release
            arch: amd
            additional_build_args: '--disable-jemalloc'
          - os: ubuntu-24.04
            build_type: RelWithDebInfo
            arch: arm
            additional_build_args: ''
          - os: ubuntu-24.04
            build_type: RelWithDebInfo
            arch: amd
            additional_build_args: ''
    uses: ./.github/workflows/reusable_package.yaml
    with:
      os: ${{ matrix.os }}
      arch: ${{ matrix.arch }}
      build_type: ${{ matrix.build_type }}
      toolchain: v6
      push_to_github: 'false'
      push_to_s3: 'true'
      s3_bucket: deps.memgraph.io
      s3_region: eu-west-1
      s3_dest_dir: "daily-build/memgraph/${{ needs.CurrentDateJob.outputs.current_date }}"
      additional_build_args: ${{ matrix.additional_build_args }}
    secrets: inherit

  DailyDockerArtifact:
    if:  (github.event_name == 'schedule' || github.event.inputs.trigger_daily_packaging == 'true') && always()
    needs: [CurrentDateJob]
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-24.04]
        arch: [amd, arm]
        build_type: [Release]
        include: # Include an extra docker build with RelWithDebInfo for amd
          - os: ubuntu-24.04
            arch: amd
            build_type: RelWithDebInfo
    uses: ./.github/workflows/reusable_package.yaml
    with:
      os: ${{ matrix.os }}
      arch: ${{ matrix.arch }}
      build_type: ${{ matrix.build_type }}
      toolchain: v6
      additional_build_args: '--for-docker'
      push_to_github: 'false'
      push_to_s3: 'true'
      s3_bucket: deps.memgraph.io
      s3_region: eu-west-1
      s3_dest_dir: "daily-build/memgraph/${{ needs.CurrentDateJob.outputs.current_date }}"
    secrets: inherit

  AggregateBuildTests:
    if:  (github.event_name == 'schedule' || github.event.inputs.trigger_daily_packaging == 'true') && always()
    needs: [CurrentDateJob,TestIndividual,DailyPackageArtifact,DailyDockerArtifact]
    runs-on: [self-hosted]
    steps:
      - name: Set up repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.S3_AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.S3_AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-west-1
        
      - name: Aggregate Test Results and Builds
        env:
          TEST_INDIVIDUAL_RESULT: ${{ needs.TestIndividual.outputs.test_status }}
          CURRENT_BUILD_DATE: ${{ needs.CurrentDateJob.outputs.current_date }}
        run: |
          echo "TEST_INDIVIDUAL_RESULT: $TEST_INDIVIDUAL_RESULT"
          echo "Package Date: $CURRENT_BUILD_DATE"
          echo "BUILD_TEST_RESULTS=$(python3 tools/aggregate_build_tests.py)" >> $GITHUB_ENV

      - name: Trigger Daily Builds Page Update
        env: 
          GITHUB_TOKEN: ${{ secrets.REPO_PAT }}
        run: |
          payload="${BUILD_TEST_RESULTS}"
          echo "Payload: $payload"
          # Send the dispatch request
          curl -X POST \
            -H "Accept: application/vnd.github.v3+json" \
            -H "Authorization: token $GITHUB_TOKEN" \
            https://api.github.com/repos/memgraph/daily-builds/dispatches \
            -d "$payload"    

  TriggerMageDailyBuild:
    if: (github.event_name == 'schedule' || github.event.inputs.trigger_daily_packaging == 'true') && always()
    needs: [CurrentDateJob,DailyPackageArtifact]
    runs-on: [self-hosted]
    steps:
      - name: Build Request Payload
        env:
          CURRENT_BUILD_DATE: ${{ needs.CurrentDateJob.outputs.current_date }}
        run: |
          echo "MAGE_PAYLOAD=$(python3 tools/trigger_mage_payload.py)" >> $GITHUB_ENV

      - name: Trigger Daily Builds Page Update
        env: 
          GITHUB_TOKEN: ${{ secrets.REPO_PAT }}
        run: |
          # Send the dispatch request to trigger MAGE daily build
          curl -X POST \
            -H "Accept: application/vnd.github.v3+json" \
            -H "Authorization: token $GITHUB_TOKEN" \
            https://api.github.com/repos/memgraph/mage/dispatches \
            -d "${MAGE_PAYLOAD}"  