name: "Package Memgraph (External)"

on:
  workflow_dispatch:
    inputs:
      pr_number:
        type: string
        description: "PR number."
        default: ''
      base_master:
        type: boolean
        description: "Base master?"
        default: false
      build_type:
        type: choice
        description: "Memgraph Build type."
        default: 'Release'
        options:
          - Release
          - RelWithDebInfo
      os:
        type: choice
        description: "Target OS for which memgraph will be packaged. Select 'all' if you want to package for every listed OS."
        default: 'ubuntu-24.04'
        options:
          - all
          - centos-9
          - centos-10
          - debian-11
          - debian-11-arm
          - debian-12
          - debian-12-arm
          - docker
          - docker-arm
          - fedora-41
          - ubuntu-22.04
          - ubuntu-24.04
          - ubuntu-24.04-arm
      toolchain:
        type: choice
        description: "Toolchain version with which memgraph will be packaged."
        default: 'v6'
        options:
          - v6
      push_to_s3:
        type: boolean
        description: "Push final packages to an S3 bucket?"
        default: false
      s3_dest_dir:
        type: string
        description: "Target dir path in chosen S3 bucket, don't end the path with '/'. For bucket 'deps.memgraph.io' use format 'memgraph/vX.Y.Z'."
        default: ''        

jobs:
  CallCreateStagingBranch:
    uses: ./.github/workflows/create_staging_branch.yaml
    with:
      pr_number: ${{ inputs.pr_number }}
      base_master: ${{ inputs.base_master }}
    secrets: inherit

  TriggerPackageWorkflow:
    needs: CallCreateStagingBranch
    uses: ./.github/workflows/package_memgraph.yaml
    with:
      build_type: ${{ inputs.build_type }}
      os: ${{ inputs.os }}
      toolchain: ${{ inputs.toolchain }}
      push_to_s3: ${{ inputs.push_to_s3 }}
      s3_dest_dir: ${{ inputs.s3_dest_dir }}
      ref: ${{ needs.CallCreateStagingBranch.outputs.staging_branch }}
    secrets: inherit

  UpdatePRComment:
    needs: [CallCreateStagingBranch, TriggerPackageWorkflow]
    runs-on: ubuntu-latest
    if: always()
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Update PR comment with package results
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          if [ "${{ needs.TriggerPackageWorkflow.result }}" == "success" ]; then
            status="true"
            echo "✅ Package workflow completed successfully"
          else
            status="false"
            echo "❌ Package workflow failed"
          fi
          
          python3 ./tools/external-contributions/pr_comment_update.py \
            "${{ needs.CallCreateStagingBranch.outputs.comment_id }}" \
            "${{ github.event.inputs.pr_number }}" \
            "${{ needs.CallCreateStagingBranch.outputs.staging_branch }}" \
            "$status"
