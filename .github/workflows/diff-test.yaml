name: Diff

on:
  push:
    paths-ignore:
      - 'docs/**'
      - '**/*.md'
      - '.clang-format'
      - 'CODEOWNERS'

jobs:
  debug_build:
    name: "Debug build"
    runs-on: [self-hosted, Linux, X64, Diff]
    env:
      THREADS: 24
      MEMGRAPH_ENTERPRISE_LICENSE: ${{ secrets.MEMGRAPH_ENTERPRISE_LICENSE }}
      MEMGRAPH_ORGANIZATION_NAME: ${{ secrets.MEMGRAPH_ORGANIZATION_NAME }}

    steps:
      - name: Set up repository
        uses: actions/checkout@v2
        with:
          # Number of commits to fetch. `0` indicates all history for all
          # branches and tags. (default: 1)
          fetch-depth: 0

      - name: Build debug binaries
        run: |
          # Activate toolchain.
          source /opt/toolchain-v3/activate

          # Initialize dependencies.
          ./init

          # Build debug binaries.
          cd build
          cmake ..
          make -j$THREADS

      - name: Run integration tests
        run: |
          cd tests/integration
          for name in *; do
            if [ ! -d $name ]; then continue; fi
            pushd $name >/dev/null
            echo "Running: $name"
            if [ -x prepare.sh ]; then
              ./prepare.sh
            fi
            if [ -x runner.py ]; then
              ./runner.py
            elif [ -x runner.sh ]; then
              ./runner.sh
            fi
            echo
            popd >/dev/null
          done

  release_build:
    name: "Release build"
    runs-on: [self-hosted, Linux, X64, Diff]
    env:
      THREADS: 24
      MEMGRAPH_ENTERPRISE_LICENSE: ${{ secrets.MEMGRAPH_ENTERPRISE_LICENSE }}
      MEMGRAPH_ORGANIZATION_NAME: ${{ secrets.MEMGRAPH_ORGANIZATION_NAME }}

    steps:
      - name: Set up repository
        uses: actions/checkout@v2
        with:
          # Number of commits to fetch. `0` indicates all history for all
          # branches and tags. (default: 1)
          fetch-depth: 0

      - name: Build release binaries
        run: |
          # Activate toolchain.
          source /opt/toolchain-v3/activate

          # Initialize dependencies.
          ./init

          # Build release binaries.
          cd build
          cmake -DCMAKE_BUILD_TYPE=release ..
          make -j$THREADS

      - name: Run e2e tests
        run: |
          # TODO(gitbuda): Setup mgclient and pymgclient properly.
          cd tests
          ./setup.sh
          source ve3/bin/activate
          cd e2e
          LD_LIBRARY_PATH=$LD_LIBRARY_PATH:../../libs/mgclient/lib python runner.py --workloads-root-directory .
