name: "Create Staging Branch"

on:
  workflow_call:
    inputs:
      pr_number:
        type: string
        description: "PR number."
        default: ''
      base_master:
        type: boolean
        description: "Base master?"
        default: false
    outputs:
      pr_number: 
        description: "PR number."
        value: ${{ jobs.CreateStagingBranch.outputs.pr_number }}
      branch_name: 
        description: "Branch name."
        value: ${{ jobs.CreateStagingBranch.outputs.branch_name }}
      commit_sha: 
        description: "Commit SHA."
        value: ${{ jobs.CreateStagingBranch.outputs.commit_sha }}
      staging_branch: 
        description: "Staging branch."
        value: ${{ jobs.CreateStagingBranch.outputs.staging_branch }}
      short_sha: 
        description: "Short SHA."
        value: ${{ jobs.CreateStagingBranch.outputs.short_sha }}
      comment_id: 
        description: "ID of the created PR comment."
        value: ${{ jobs.CreateStagingBranch.outputs.comment_id }}

jobs:
  CreateStagingBranch:
    runs-on: ubuntu-latest
    outputs:
      pr_number: ${{ steps.get_branch_name.outputs.pr_number }}
      branch_name: ${{ steps.get_branch_name.outputs.branch_name }}
      commit_sha: ${{ steps.get_branch_name.outputs.commit_sha }}
      staging_branch: ${{ steps.get_branch_name.outputs.staging_branch }}
      short_sha: ${{ steps.get_branch_name.outputs.short_sha }}
      comment_id: ${{ steps.create_pr_comment.outputs.comment_id }}
      repo_url: ${{ steps.get_branch_name.outputs.repo_url }}
      repo_owner: ${{ steps.get_branch_name.outputs.repo_owner }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Get new branch name
        id: get_branch_name
        run: |
          # Run the script and read the output into variables
          read pr_number branch_name commit_sha staging_branch short_sha repo_url repo_owner <<< "$(./tools/external-contributions/get_pr_info.sh "${{ github.event.inputs.pr_number }}" "${{ github.token }}")"
          
          # Set GitHub output variables
          echo "pr_number=$pr_number" >> $GITHUB_OUTPUT
          echo "branch_name=$branch_name" >> $GITHUB_OUTPUT
          echo "commit_sha=$commit_sha" >> $GITHUB_OUTPUT
          echo "staging_branch=$staging_branch" >> $GITHUB_OUTPUT
          echo "short_sha=$short_sha" >> $GITHUB_OUTPUT
          echo "repo_url=$repo_url" >> $GITHUB_OUTPUT
          echo "repo_owner=$repo_owner" >> $GITHUB_OUTPUT

          # Print variables to logs
          echo "pr_number=$pr_number"
          echo "branch_name=$branch_name"
          echo "commit_sha=$commit_sha"
          echo "staging_branch=$staging_branch"
          echo "short_sha=$short_sha"
          echo "repo_url=$repo_url"
          echo "repo_owner=$repo_owner"

      - name: Create staging branch
        run: |
          git config user.name "GitHub Actions"
          git config user.email "github-actions@github.com"
          
          ./tools/external-contributions/create_staging_branch.sh \
            "${{ github.event.inputs.base_master }}" \
            "${{ steps.get_branch_name.outputs.branch_name }}" \
            "${{ steps.get_branch_name.outputs.commit_sha }}" \
            "${{ steps.get_branch_name.outputs.staging_branch }}" \
            "${{ steps.get_branch_name.outputs.repo_url }}" \
            "${{ steps.get_branch_name.outputs.repo_owner }}"

          echo "Created staging branch: ${{ steps.get_branch_name.outputs.staging_branch }}"
          echo "Based on PR: #${{ github.event.inputs.pr_number }}"
          echo "Feature branch: ${{ steps.get_branch_name.outputs.branch_name }}"
          echo "Commit SHA: ${{ steps.get_branch_name.outputs.commit_sha }}"
          echo "Base master: ${{ github.event.inputs.base_master }}"

      - name: Create PR comment
        id: create_pr_comment
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          # Run the Python script and capture its output
          output=$(python3 ./tools/external-contributions/pr_comment.py \
            "${{ github.event.inputs.pr_number }}" \
            "${{ steps.get_branch_name.outputs.staging_branch }}")
          
          # Display the output
          echo "$output"
          
          # Extract the COMMENT_ID from the output
          comment_id=$(echo "$output" | grep "^COMMENT_ID=" | cut -d'=' -f2-)
          
          if [ -n "$comment_id" ]; then
            echo "comment_id=$comment_id" >> $GITHUB_OUTPUT
            echo "Comment ID captured: $comment_id"
          else
            echo "Warning: COMMENT_ID not found in output"
          fi
