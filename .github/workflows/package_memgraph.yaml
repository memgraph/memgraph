name: Package memgraph

# Concurrency control: limit to one run per PR, but allow multiple manual runs
concurrency:
  group: ${{ github.workflow }}-${{ github.event_name == 'pull_request' && github.event.number || github.run_id }}
  cancel-in-progress: ${{ github.event_name == 'pull_request' }}


on:
  pull_request:
  workflow_dispatch:
    inputs:
      build_type:
        type: choice
        description: "Memgraph Build type."
        default: 'Release'
        options:
          - Release
          - RelWithDebInfo
      os:
        type: choice
        description: "Target OS for which memgraph will be packaged. Select 'all' if you want to package for every listed OS."
        default: 'ubuntu-24.04'
        options:
          - all
          - centos-9
          - centos-10
          - debian-11
          - debian-11-arm
          - debian-12
          - debian-12-arm
          - docker
          - docker-arm
          - fedora-41
          - ubuntu-22.04
          - ubuntu-24.04
          - ubuntu-24.04-arm
      toolchain:
        type: choice
        description: "Toolchain version with which memgraph will be packaged."
        default: 'v6'
        options:
          - v6
      push_to_s3:
        type: boolean
        description: "Push final packages to an S3 bucket?"
        default: false
      push_to_github:
        type: boolean
        description: "Push final packages to GitHub?"
        default: false
      s3_dest_dir:
        type: string
        description: "Target dir path in chosen S3 bucket, don't end the path with '/'. For bucket 'deps.memgraph.io' use format 'memgraph/vX.Y.Z'."
        default: ''

  workflow_call:
    inputs:
      build_type:
        type: string
        description: "Memgraph Build type."
        default: 'Release'
      os:
        type: string
        description: "Target OS for which memgraph will be packaged. Select 'all' if you want to package for every listed OS."
        default: 'ubuntu-24.04'
      toolchain:
        type: string
        description: "Toolchain version with which memgraph will be packaged."
        default: 'v6'
      push_to_s3:
        type: boolean
        description: "Push final packages to an S3 bucket?"
        default: false
      push_to_github:
        type: boolean
        description: "Push final packages to GitHub?"
        default: false
      s3_dest_dir:
        type: string
        description: "Target dir path in chosen S3 bucket, don't end the path with '/'. For bucket 'deps.memgraph.io' use format 'memgraph/vX.Y.Z'."
        default: ''
      ref:
        type: string
        description: "Branch or commit ref to run the workflow on"
        required: false
        default: ''
        
jobs:
  PackageSetup:
    runs-on: ubuntu-latest
    outputs:
      run_package_centos_9: ${{ steps.setup.outputs.run_package_centos_9 }}
      run_package_centos_10: ${{ steps.setup.outputs.run_package_centos_10 }}
      run_package_debian_11: ${{ steps.setup.outputs.run_package_debian_11 }}
      run_package_debian_11_arm: ${{ steps.setup.outputs.run_package_debian_11_arm }}
      run_package_debian_12: ${{ steps.setup.outputs.run_package_debian_12 }}
      run_package_debian_12_arm: ${{ steps.setup.outputs.run_package_debian_12_arm }}
      run_package_docker: ${{ steps.setup.outputs.run_package_docker }}
      run_package_docker_arm: ${{ steps.setup.outputs.run_package_docker_arm }}
      run_package_fedora_41: ${{ steps.setup.outputs.run_package_fedora_41 }}
      run_package_rocky_9_3: ${{ steps.setup.outputs.run_package_rocky_9_3 }}
      run_package_ubuntu_22_04: ${{ steps.setup.outputs.run_package_ubuntu_22_04 }}
      run_package_ubuntu_24_04: ${{ steps.setup.outputs.run_package_ubuntu_24_04 }}
      run_package_ubuntu_24_04_arm: ${{ steps.setup.outputs.run_package_ubuntu_24_04_arm }}
      run_package_ubuntu_24_04_malloc: ${{ steps.setup.outputs.run_package_ubuntu-24_04_malloc }}
      workflow_input_build_type: ${{ steps.setup.outputs.workflow_input_build_type }}
      workflow_input_toolchain: ${{ steps.setup.outputs.workflow_input_toolchain }}
      workflow_input_push_to_s3: ${{ steps.setup.outputs.workflow_input_push_to_s3 }}
      workflow_input_push_to_github: ${{ steps.setup.outputs.workflow_input_push_to_github }}
      workflow_input_s3_dest_dir: ${{ steps.setup.outputs.workflow_input_s3_dest_dir }}
    env:
      GH_CONTEXT: ${{ toJson(github) }}
      GH_CONTEXT_FILE_NAME: github_context.json
    steps:
      - name: Set up repository
        uses: actions/checkout@v4
        with:
          ref: ${{ inputs.ref || github.ref }}
          fetch-depth: 0
      - name: Dump GitHub context
        run: echo "$GH_CONTEXT" >> "$GH_CONTEXT_FILE_NAME"
      - name: Set up package execution
        id: setup
        run: ./tools/package_setup.py --gh-context-path "$GH_CONTEXT_FILE_NAME"

  CentOS9:
    needs: PackageSetup
    if: ${{ needs.PackageSetup.outputs.run_package_centos_9 == 'true' }}
    uses: ./.github/workflows/reusable_package.yaml
    with:
      os: "centos-9"
      toolchain: ${{ needs.PackageSetup.outputs.workflow_input_toolchain }}
      arch: "amd"
      build_type: ${{ needs.PackageSetup.outputs.workflow_input_build_type }}
      push_to_s3: ${{ needs.PackageSetup.outputs.workflow_input_push_to_s3 }}
      push_to_github: ${{ needs.PackageSetup.outputs.workflow_input_push_to_github }}
      s3_bucket: deps.memgraph.io
      s3_region: eu-west-1
      s3_dest_dir: ${{ needs.PackageSetup.outputs.workflow_input_s3_dest_dir }}
      ref: ${{ inputs.ref || github.ref }}
    secrets: inherit

  CentOS10:
    needs: PackageSetup
    if: ${{ needs.PackageSetup.outputs.run_package_centos_10 == 'true' }}
    uses: ./.github/workflows/reusable_package.yaml
    with:
      os: "centos-10"
      toolchain: ${{ needs.PackageSetup.outputs.workflow_input_toolchain }}
      arch: "amd"
      build_type: ${{ needs.PackageSetup.outputs.workflow_input_build_type }}
      push_to_s3: ${{ needs.PackageSetup.outputs.workflow_input_push_to_s3 }}
      push_to_github: ${{ needs.PackageSetup.outputs.workflow_input_push_to_github }}
      s3_bucket: deps.memgraph.io
      s3_region: eu-west-1
      s3_dest_dir: ${{ needs.PackageSetup.outputs.workflow_input_s3_dest_dir }}
      ref: ${{ inputs.ref || github.ref }}
    secrets: inherit

  Debian11:
    needs: PackageSetup
    if: ${{ needs.PackageSetup.outputs.run_package_debian_11 == 'true' }}
    uses: ./.github/workflows/reusable_package.yaml
    with:
      os: "debian-11"
      toolchain: ${{ needs.PackageSetup.outputs.workflow_input_toolchain }}
      arch: "amd"
      build_type: ${{ needs.PackageSetup.outputs.workflow_input_build_type }}
      push_to_s3: ${{ needs.PackageSetup.outputs.workflow_input_push_to_s3 }}
      push_to_github: ${{ needs.PackageSetup.outputs.workflow_input_push_to_github }}
      s3_bucket: deps.memgraph.io
      s3_region: eu-west-1
      s3_dest_dir: ${{ needs.PackageSetup.outputs.workflow_input_s3_dest_dir }}
      ref: ${{ inputs.ref || github.ref }}
    secrets: inherit

  Debian11-arm:
    needs: PackageSetup
    if: ${{ needs.PackageSetup.outputs.run_package_debian_11_arm == 'true' }}
    uses: ./.github/workflows/reusable_package.yaml
    with:
      os: "debian-11"
      toolchain: ${{ needs.PackageSetup.outputs.workflow_input_toolchain }}
      arch: "arm"
      build_type: ${{ needs.PackageSetup.outputs.workflow_input_build_type }}
      push_to_s3: ${{ needs.PackageSetup.outputs.workflow_input_push_to_s3 }}
      push_to_github: ${{ needs.PackageSetup.outputs.workflow_input_push_to_github }}
      s3_bucket: deps.memgraph.io
      s3_region: eu-west-1
      s3_dest_dir: ${{ needs.PackageSetup.outputs.workflow_input_s3_dest_dir }}
      ref: ${{ inputs.ref || github.ref }}
    secrets: inherit

  Debian12:
    needs: PackageSetup
    if: ${{ needs.PackageSetup.outputs.run_package_debian_12 == 'true' }}
    uses: ./.github/workflows/reusable_package.yaml
    with:
      os: "debian-12"
      toolchain: ${{ needs.PackageSetup.outputs.workflow_input_toolchain }}
      arch: "amd"
      build_type: ${{ needs.PackageSetup.outputs.workflow_input_build_type }}
      push_to_s3: ${{ needs.PackageSetup.outputs.workflow_input_push_to_s3 }}
      push_to_github: ${{ needs.PackageSetup.outputs.workflow_input_push_to_github }}
      s3_bucket: deps.memgraph.io
      s3_region: eu-west-1
      s3_dest_dir: ${{ needs.PackageSetup.outputs.workflow_input_s3_dest_dir }}
      ref: ${{ inputs.ref || github.ref }}
    secrets: inherit

  Debian12-arm:
    needs: PackageSetup
    if: ${{ needs.PackageSetup.outputs.run_package_debian_12_arm == 'true' }}
    uses: ./.github/workflows/reusable_package.yaml
    with:
      os: "debian-12"
      toolchain: ${{ needs.PackageSetup.outputs.workflow_input_toolchain }}
      arch: "arm"
      build_type: ${{ needs.PackageSetup.outputs.workflow_input_build_type }}
      push_to_s3: ${{ needs.PackageSetup.outputs.workflow_input_push_to_s3 }}
      push_to_github: ${{ needs.PackageSetup.outputs.workflow_input_push_to_github }}
      s3_bucket: deps.memgraph.io
      s3_region: eu-west-1
      s3_dest_dir: ${{ needs.PackageSetup.outputs.workflow_input_s3_dest_dir }}
      ref: ${{ inputs.ref || github.ref }}
    secrets: inherit

  Docker-v6:
    needs: PackageSetup
    if: ${{ needs.PackageSetup.outputs.run_package_docker == 'true' }}
    uses: ./.github/workflows/reusable_package.yaml
    with:
      os: "ubuntu-24.04"
      toolchain: ${{ needs.PackageSetup.outputs.workflow_input_toolchain }}
      arch: "amd"
      build_type: ${{ needs.PackageSetup.outputs.workflow_input_build_type }}
      additional_build_args: "--for-docker"
      push_to_s3: ${{ needs.PackageSetup.outputs.workflow_input_push_to_s3 }}
      push_to_github: ${{ needs.PackageSetup.outputs.workflow_input_push_to_github }}
      s3_bucket: deps.memgraph.io
      s3_region: eu-west-1
      s3_dest_dir: ${{ needs.PackageSetup.outputs.workflow_input_s3_dest_dir }}
      ref: ${{ inputs.ref || github.ref }}
    secrets: inherit

  Docker-v6-arm:
    needs: PackageSetup
    if: ${{ needs.PackageSetup.outputs.run_package_docker_arm == 'true' }}
    uses: ./.github/workflows/reusable_package.yaml
    with:
      os: "ubuntu-24.04"
      toolchain: ${{ needs.PackageSetup.outputs.workflow_input_toolchain }}
      arch: "arm"
      build_type: ${{ needs.PackageSetup.outputs.workflow_input_build_type }}
      additional_build_args: "--for-docker"
      push_to_s3: ${{ needs.PackageSetup.outputs.workflow_input_push_to_s3 }}
      push_to_github: ${{ needs.PackageSetup.outputs.workflow_input_push_to_github }}
      s3_bucket: deps.memgraph.io
      s3_region: eu-west-1
      s3_dest_dir: ${{ needs.PackageSetup.outputs.workflow_input_s3_dest_dir }}
      ref: ${{ inputs.ref || github.ref }}
    secrets: inherit

  Fedora41:
    needs: PackageSetup
    if: ${{ needs.PackageSetup.outputs.run_package_fedora_41 == 'true' }}
    uses: ./.github/workflows/reusable_package.yaml
    with:
      os: "fedora-41"
      toolchain: ${{ needs.PackageSetup.outputs.workflow_input_toolchain }}
      arch: "amd"
      build_type: ${{ needs.PackageSetup.outputs.workflow_input_build_type }}
      push_to_s3: ${{ needs.PackageSetup.outputs.workflow_input_push_to_s3 }}
      push_to_github: ${{ needs.PackageSetup.outputs.workflow_input_push_to_github }}
      s3_bucket: deps.memgraph.io
      s3_region: eu-west-1
      s3_dest_dir: ${{ needs.PackageSetup.outputs.workflow_input_s3_dest_dir }}
      ref: ${{ inputs.ref || github.ref }}
    secrets: inherit

  RockyLinux9_3:
    needs: PackageSetup
    if: ${{ needs.PackageSetup.outputs.run_package_rocky_9_3 == 'true' }}
    uses: ./.github/workflows/reusable_package.yaml
    with:
      os: "rocky-9.3"
      toolchain: ${{ needs.PackageSetup.outputs.workflow_input_toolchain }}
      arch: "amd"
      build_type: ${{ needs.PackageSetup.outputs.workflow_input_build_type }}
      push_to_s3: ${{ needs.PackageSetup.outputs.workflow_input_push_to_s3 }}
      push_to_github: ${{ needs.PackageSetup.outputs.workflow_input_push_to_github }}
      s3_bucket: deps.memgraph.io
      s3_region: eu-west-1
      s3_dest_dir: ${{ needs.PackageSetup.outputs.workflow_input_s3_dest_dir }}
      ref: ${{ inputs.ref || github.ref }}
    secrets: inherit

  Ubuntu22_04:
    needs: PackageSetup
    if: ${{ needs.PackageSetup.outputs.run_package_ubuntu_22_04 == 'true' }}
    uses: ./.github/workflows/reusable_package.yaml
    with:
      os: "ubuntu-22.04"
      toolchain: ${{ needs.PackageSetup.outputs.workflow_input_toolchain }}
      arch: "amd"
      build_type: ${{ needs.PackageSetup.outputs.workflow_input_build_type }}
      push_to_s3: ${{ needs.PackageSetup.outputs.workflow_input_push_to_s3 }}
      push_to_github: ${{ needs.PackageSetup.outputs.workflow_input_push_to_github }}
      s3_bucket: deps.memgraph.io
      s3_region: eu-west-1
      s3_dest_dir: ${{ needs.PackageSetup.outputs.workflow_input_s3_dest_dir }}
      ref: ${{ inputs.ref || github.ref }}
    secrets: inherit

  Ubuntu24_04:
    needs: PackageSetup
    if: ${{ needs.PackageSetup.outputs.run_package_ubuntu_24_04 == 'true' }}
    uses: ./.github/workflows/reusable_package.yaml
    with:
      os: "ubuntu-24.04"
      toolchain: ${{ needs.PackageSetup.outputs.workflow_input_toolchain }}
      arch: "amd"
      build_type: ${{ needs.PackageSetup.outputs.workflow_input_build_type }}
      push_to_s3: ${{ needs.PackageSetup.outputs.workflow_input_push_to_s3 }}
      push_to_github: ${{ needs.PackageSetup.outputs.workflow_input_push_to_github }}
      s3_bucket: deps.memgraph.io
      s3_region: eu-west-1
      s3_dest_dir: ${{ needs.PackageSetup.outputs.workflow_input_s3_dest_dir }}
      ref: ${{ inputs.ref || github.ref }}
    secrets: inherit

  Ubuntu24_04-arm:
    needs: PackageSetup
    if: ${{ needs.PackageSetup.outputs.run_package_ubuntu_24_04_arm == 'true' }}
    uses: ./.github/workflows/reusable_package.yaml
    with:
      os: "ubuntu-24.04"
      toolchain: ${{ needs.PackageSetup.outputs.workflow_input_toolchain }}
      arch: "arm"
      build_type: ${{ needs.PackageSetup.outputs.workflow_input_build_type }}
      push_to_s3: ${{ needs.PackageSetup.outputs.workflow_input_push_to_s3 }}
      push_to_github: ${{ needs.PackageSetup.outputs.workflow_input_push_to_github }}
      s3_bucket: deps.memgraph.io
      s3_region: eu-west-1
      s3_dest_dir: ${{ needs.PackageSetup.outputs.workflow_input_s3_dest_dir }}
      ref: ${{ inputs.ref || github.ref }}
    secrets: inherit

  Ubuntu24_04-malloc:
    needs: PackageSetup
    if: ${{ needs.PackageSetup.outputs.run_package_ubuntu_24_04_malloc == 'true' }}
    uses: ./.github/workflows/reusable_package.yaml
    with:
      os: "ubuntu-24.04"
      toolchain: ${{ needs.PackageSetup.outputs.workflow_input_toolchain }}
      arch: "amd"
      build_type: ${{ needs.PackageSetup.outputs.workflow_input_build_type }}
      additional_build_args: "--disable-jemalloc"
      push_to_s3: ${{ needs.PackageSetup.outputs.workflow_input_push_to_s3 }}
      push_to_github: ${{ needs.PackageSetup.outputs.workflow_input_push_to_github }}
      s3_bucket: deps.memgraph.io
      s3_region: eu-west-1
      s3_dest_dir: ${{ needs.PackageSetup.outputs.workflow_input_s3_dest_dir }}
      ref: ${{ inputs.ref || github.ref }}
    secrets: inherit
