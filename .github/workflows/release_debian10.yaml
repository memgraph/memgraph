name: In development - Release Debian 10

on:
  pull_request:
    paths-ignore:
      - "docs/**"
      - "**/*.md"
      - ".clang-format"
      - "CODEOWNERS"
      - "licenses/*"

jobs:
  release_jepsen_test:
    name: "Release Jepsen Test"
    runs-on: [self-hosted, Linux, X64, Debian10, JepsenControl]
    env:
      THREADS: 24
      MEMGRAPH_ENTERPRISE_LICENSE: ${{ secrets.MEMGRAPH_ENTERPRISE_LICENSE }}
      MEMGRAPH_ORGANIZATION_NAME: ${{ secrets.MEMGRAPH_ORGANIZATION_NAME }}
    timeout-minutes: 60

    steps:
      - name: Set up repository
        uses: actions/checkout@v3
        with:
          # Number of commits to fetch. `0` indicates all history for all
          # branches and tags. (default: 1)
          fetch-depth: 0

      - name: Build release binaries
        run: |
          # Activate toolchain.
          source /opt/toolchain-v4/activate
          # Initialize dependencies.
          ./init
          # Set default build_type to Release
          INPUT_BUILD_TYPE=${{ github.event.inputs.build_type }}
          BUILD_TYPE=${INPUT_BUILD_TYPE:-"Release"}
          # Build only memgraph release binary.
          cd build
          cmake -DCMAKE_BUILD_TYPE=$BUILD_TYPE ..
          make -j$THREADS memgraph

      - name: Ensure Jepsen cluster is up
        run: |
          cd tests/jepsen
          ./run.sh cluster-up

      - name: Run Jepsen tests
        run: |
          cd tests/jepsen
          ./run.sh test-all-individually --binary ../../build/memgraph --ignore-run-stdout-logs --ignore-run-stderr-logs
      
      - name: Cleanup Jepsen cluster
        run: |
          cd tests/jepsen
          ./run.sh cluster-cleanup

      - name: Save Jepsen report
        uses: actions/upload-artifact@v3
        if: ${{ always() }}
        with:
          name: "Jepsen Report"
          path: tests/jepsen/Jepsen.tar.gz
