name: "Jepsen stress test"

on:
  workflow_dispatch:
  schedule:
    - cron: "0 0 * * *"

env:
  ARCH: 'amd'
  BUILD_TYPE: 'RelWithDebInfo'
  MEMGRAPH_ENTERPRISE_LICENSE: ${{ secrets.MEMGRAPH_ENTERPRISE_LICENSE }}
  MEMGRAPH_ORGANIZATION_NAME: ${{ secrets.MEMGRAPH_ORGANIZATION_NAME }}
  OS: 'debian-12'
  TOOLCHAIN: 'v5'

jobs:
  core:
    name: "Jepsen stress tests"
    runs-on: [self-hosted, Linux, X64, DockerMgBuild]
    timeout-minutes: 120
    steps:
      - name: Set up repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Refresh Jepsen Cluster
        run: |
          cd tests/jepsen
          ./run.sh cluster-refresh --nodes-no 6

      - name: Spin up mgbuild container
        run: |
          ./release/package/mgbuild.sh \
          --toolchain $TOOLCHAIN \
          --os $OS \
          --arch $ARCH \
          run

      - name: Build release binary
        run: |
          ./release/package/mgbuild.sh \
          --toolchain $TOOLCHAIN \
          --os $OS \
          --arch $ARCH \
          --build-type $BUILD_TYPE \
          build-memgraph

      - name: Copy memgraph binary
        run: |
          ./release/package/mgbuild.sh \
          --toolchain $TOOLCHAIN \
          --os $OS \
          --arch $ARCH \
          copy --binary --dest-dir build

      - name: Copy libmemgraph_module_support.so
        run: |
          ./release/package/mgbuild.sh \
          --toolchain $TOOLCHAIN \
          --os $OS \
          --arch $ARCH \
          copy --libs --dest-dir build/src/query

      - name: Run unit tests for Jepsen code
        run: |
          cd tests/jepsen
          ./run.sh unit-tests --binary ../../build/memgraph

      - name: Run HA create test
        run: |
          cd tests/jepsen
          ./run.sh test \
          --binary ../../build/memgraph \
          --run-args "--workload hacreate --nodes-config resources/cluster.edn --time-limit 600 --concurrency 6" \
          --ignore-run-stdout-logs \
          --ignore-run-stderr-logs \
          --nodes-no 6 \
          --enterprise-license $MEMGRAPH_ENTERPRISE_LICENSE \
          --organization-name $MEMGRAPH_ORGANIZATION_NAME

      - name: Process Jepsen results
        continue-on-error: true
        if: always()
        run: |
          cd tests/jepsen
          ./run.sh process-results

      - name: Save Jepsen report
        continue-on-error: true
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: "Jepsen Report-${{ inputs.run_id }}"
          path: tests/jepsen/Jepsen.tar.gz

      - name: Stop mgbuild container
        if: always()
        run: |
          ./release/package/mgbuild.sh \
          --toolchain $TOOLCHAIN \
          --os $OS \
          --arch $ARCH \
          stop --remove
