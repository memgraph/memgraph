name: "Diff-release"

on:
  workflow_call:
    inputs:
      arch:
        type: string
        description: "Target architecture (amd, arm). Default value is amd."
        default: 'amd'
      os:
        type: string
        description: "Target os. Default value is ubuntu-24.04."
        default: 'ubuntu-24.04'
      toolchain:
        type: string
        description: "Toolchain version (v4, v5, v6). Default value is v6."
        default: 'v6'
      run_core:
        type: string
        description: "Should the core release build tests be run? Default is true."
        default: 'true'
      run_benchmark:
        type: string
        description: "Should the release build benchmark be run? Default is true."
        default: 'true'
      run_e2e:
        type: string
        description: "Should the end to end tests be run? Default is true."
        default: 'true'
      run_stress:
        type: string
        description: "Should the stress and durability tests be run? Default is true."
        default: 'true'
      run_query_modules:
        type: string
        description: "Should the query modules tests be run? Default is true."
        default: 'true'
      run_id:
        type: string
        description: "The ID of the run that triggered this workflow."
        default: '0'
      ref:
        description: 'Branch or commit ref to run the workflow on'
        required: false
        default: ''
        type: string

env:
  ARCH: ${{ inputs.arch }}
  BUILD_TYPE: 'Release'
  MEMGRAPH_ENTERPRISE_LICENSE: ${{ secrets.MEMGRAPH_ENTERPRISE_LICENSE }}
  MEMGRAPH_ORGANIZATION_NAME: ${{ secrets.MEMGRAPH_ORGANIZATION_NAME }}
  OS: ${{ inputs.os }}
  TOOLCHAIN: ${{ inputs.toolchain }}
  DEFAULT_MGBENCH_EXPORT_RESULTS_FILE: 'benchmark_result.json'

jobs:
  core:
    if: ${{ inputs.run_core == 'true' }}
    name: "Core tests"
    runs-on: [self-hosted, Linux, X64, DockerMgBuild]
    timeout-minutes: 60
    steps:
      - name: Set up repository
        uses: actions/checkout@v4
        with:
          ref: ${{ inputs.ref || github.ref }}
          fetch-depth: 0

      - name: Log in to Docker Hub
        uses: ./.github/actions/docker-login
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Spin up mgbuild container
        run: |
          ./release/package/mgbuild.sh \
          --toolchain $TOOLCHAIN \
          --os $OS \
          --arch $ARCH \
          run

      - name: Build release binary
        run: |
          ./release/package/mgbuild.sh \
          --toolchain $TOOLCHAIN \
          --os $OS \
          --arch $ARCH \
          --build-type $BUILD_TYPE \
          build-memgraph

      - name: Initialize tests
        run: |
          ./release/package/mgbuild.sh \
          --toolchain $TOOLCHAIN \
          --os $OS \
          --arch $ARCH \
          init-tests

      - name: Run GQL Behave tests
        run: |
          ./release/package/mgbuild.sh \
          --toolchain $TOOLCHAIN \
          --os $OS \
          --arch $ARCH \
          --enterprise-license $MEMGRAPH_ENTERPRISE_LICENSE \
          --organization-name $MEMGRAPH_ORGANIZATION_NAME \
          test-memgraph gql-behave

      - name: Copy gql behave logs
        if: failure()
        run: |
          ./release/package/mgbuild.sh \
          --toolchain $TOOLCHAIN \
          --os $OS \
          --arch $ARCH \
          copy --memgraph-logs --logs-dir /home/mg/memgraph/tests/gql_behave/memgraph-logs --dest-dir build/memgraph-logs-gql-behave-tests

      - name: Save test data
        continue-on-error: true
        uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: "GQL Behave Tests(Release build)-${{ github.run_id }}"
          path: build/memgraph-logs-gql-behave-tests

      - name: Save quality assurance status
        continue-on-error: true
        uses: actions/upload-artifact@v4
        with:
          name: "GQL Behave Status-${{ inputs.run_id }}"
          path: |
            tests/gql_behave/gql_behave_status.csv
            tests/gql_behave/gql_behave_status.html

      - name: Run unit tests
        run: |
          ./release/package/mgbuild.sh \
          --toolchain $TOOLCHAIN \
          --os $OS \
          --arch $ARCH \
          --enterprise-license $MEMGRAPH_ENTERPRISE_LICENSE \
          --organization-name $MEMGRAPH_ORGANIZATION_NAME \
          test-memgraph unit

      - name: Create enterprise DEB package
        run: |
          ./release/package/mgbuild.sh \
          --toolchain $TOOLCHAIN \
          --os $OS \
          --arch $ARCH \
          --enterprise-license $MEMGRAPH_ENTERPRISE_LICENSE \
          --organization-name $MEMGRAPH_ORGANIZATION_NAME \
          package-memgraph

          ./release/package/mgbuild.sh \
          --toolchain $TOOLCHAIN \
          --os $OS \
          --arch $ARCH \
          copy --package --dest-dir build/output/${{ env.OS }}

      - name: Save enterprise DEB package
        continue-on-error: true
        uses: actions/upload-artifact@v4
        with:
          name: "Enterprise DEB package-${{ inputs.run_id }}"
          path: build/output/${{ env.OS }}/memgraph*.deb

      - name: Stop mgbuild container
        if: always()
        run: |
          ./release/package/mgbuild.sh \
          --toolchain $TOOLCHAIN \
          --os $OS \
          --arch $ARCH \
          stop --remove

      - name: Clean up Docker
        if: always()
        continue-on-error: true
        run: |
          ./tools/docker_cleanup.sh

  benchmark:
    if: ${{ inputs.run_benchmark == 'true' }}
    name: "Benchmark"
    runs-on: [self-hosted, Linux, X64, DockerMgBuild, Gen7]
    timeout-minutes: 60
    steps:
      - name: Set up repository
        uses: actions/checkout@v4
        with:
          ref: ${{ inputs.ref || github.ref }}
          fetch-depth: 0

      - name: Log in to Docker Hub
        uses: ./.github/actions/docker-login
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Spin up mgbuild container
        run: |
          ./release/package/mgbuild.sh \
          --toolchain $TOOLCHAIN \
          --os $OS \
          --arch $ARCH \
          run

      - name: Build release binary
        run: |
          ./release/package/mgbuild.sh \
          --toolchain $TOOLCHAIN \
          --os $OS \
          --arch $ARCH \
          --build-type $BUILD_TYPE \
          build-memgraph

      - name: Initialize tests
        run: |
          ./release/package/mgbuild.sh \
          --toolchain $TOOLCHAIN \
          --os $OS \
          --arch $ARCH \
          init-tests

      - name: Run macro benchmarks
        run: |
          ./release/package/mgbuild.sh \
          --toolchain $TOOLCHAIN \
          --os $OS \
          --arch $ARCH \
          --enterprise-license $MEMGRAPH_ENTERPRISE_LICENSE \
          --organization-name $MEMGRAPH_ORGANIZATION_NAME \
          test-memgraph macro-benchmark

      - name: Get branch name
        shell: bash
        run: |
          if [[ ${{ github.event_name }} == 'pull_request' ]]; then
            echo "BRANCH_NAME=$(echo ${GITHUB_HEAD_REF} | tr / -)" >> $GITHUB_ENV
          else
            echo "BRANCH_NAME=$(echo ${GITHUB_REF#refs/heads/} | tr / -)" >> $GITHUB_ENV
          fi

      - name: Upload macro benchmark results
        run: |
          ./release/package/mgbuild.sh \
          --toolchain $TOOLCHAIN \
          --os $OS \
          --arch $ARCH \
          --enterprise-license $MEMGRAPH_ENTERPRISE_LICENSE \
          --organization-name $MEMGRAPH_ORGANIZATION_NAME \
          test-memgraph upload-to-bench-graph \
          --benchmark-name "macro_benchmark" \
          --benchmark-results "../../tests/macro_benchmark/.harness_summary" \
          --github-run-id ${{ github.run_id }} \
          --github-run-number ${{ github.run_number }} \
          --head-branch-name ${{ env.BRANCH_NAME }}

      - name: Run mgbench
        run: |
          ./release/package/mgbuild.sh \
          --toolchain $TOOLCHAIN \
          --os $OS \
          --arch $ARCH \
          --enterprise-license $MEMGRAPH_ENTERPRISE_LICENSE \
          --organization-name $MEMGRAPH_ORGANIZATION_NAME \
          test-memgraph mgbench --export-results-file ${{ env.DEFAULT_MGBENCH_EXPORT_RESULTS_FILE }}

      - name: Upload mgbench results
        run: |
          ./release/package/mgbuild.sh \
          --toolchain $TOOLCHAIN \
          --os $OS \
          --arch $ARCH \
          --enterprise-license $MEMGRAPH_ENTERPRISE_LICENSE \
          --organization-name $MEMGRAPH_ORGANIZATION_NAME \
          test-memgraph upload-to-bench-graph \
          --benchmark-name "mgbench" \
          --benchmark-results "../../tests/mgbench/${{ env.DEFAULT_MGBENCH_EXPORT_RESULTS_FILE }}" \
          --github-run-id "${{ github.run_id }}" \
          --github-run-number "${{ github.run_number }}" \
          --head-branch-name "${{ env.BRANCH_NAME }}"

      - name: Stop mgbuild container
        if: always()
        run: |
          ./release/package/mgbuild.sh \
          --toolchain $TOOLCHAIN \
          --os $OS \
          --arch $ARCH \
          stop --remove

      - name: Clean up Docker
        if: always()
        continue-on-error: true
        run: |
          ./tools/docker_cleanup.sh

  e2e:
    if: ${{ inputs.run_e2e == 'true' }}
    name: "End to end tests"
    runs-on: [self-hosted, Linux, X64, DockerMgBuild]
    timeout-minutes: 110
    steps:
      - name: Set up repository
        uses: actions/checkout@v4
        with:
          ref: ${{ inputs.ref || github.ref }}
          fetch-depth: 0

      - name: Log in to Docker Hub
        uses: ./.github/actions/docker-login
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Spin up mgbuild container
        run: |
          ./release/package/mgbuild.sh \
          --toolchain $TOOLCHAIN \
          --os $OS \
          --arch $ARCH \
          run

      - name: Build release binary
        run: |
          ./release/package/mgbuild.sh \
          --toolchain $TOOLCHAIN \
          --os $OS \
          --arch $ARCH \
          --build-type $BUILD_TYPE \
          build-memgraph

      - name: Initialize tests
        run: |
          ./release/package/mgbuild.sh \
          --toolchain $TOOLCHAIN \
          --os $OS \
          --arch $ARCH \
          init-tests

      # This step will be skipped because the e2e stream tests have been disabled
      # We need to fix this as soon as possible
      - name: Ensure Kafka and Pulsar are up
        if: false
        run: |
          cd tests/e2e/streams/kafka
          docker-compose up -d
          cd ../pulsar
          docker-compose up -d

      - name: Run e2e tests
        run: |
          ./release/package/mgbuild.sh \
          --toolchain $TOOLCHAIN \
          --os $OS \
          --arch $ARCH \
          --enterprise-license $MEMGRAPH_ENTERPRISE_LICENSE \
          --organization-name $MEMGRAPH_ORGANIZATION_NAME \
          test-memgraph e2e

      # Same as two steps prior
      - name: Ensure Kafka and Pulsar are down
        if: false
        run: |
          cd tests/e2e/streams/kafka
          docker-compose down
          cd ../pulsar
          docker-compose down

      - name: Copy build logs
        if: failure()
        run: |
          ./release/package/mgbuild.sh \
          --toolchain $TOOLCHAIN \
          --os $OS \
          --arch $ARCH \
          copy --build-logs --dest-dir build/e2e/logs

      - name: Save test data
        continue-on-error: true
        uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: "Test data(Release build)-${{ inputs.run_id }}"
          path: build/e2e/logs

      - name: Stop mgbuild container
        if: always()
        run: |
          ./release/package/mgbuild.sh \
          --toolchain $TOOLCHAIN \
          --os $OS \
          --arch $ARCH \
          stop --remove

      - name: Clean up Docker
        if: always()
        continue-on-error: true
        run: |
          ./tools/docker_cleanup.sh

  stress:
    if: ${{ inputs.run_stress == 'true' }}
    name: "Stress tests"
    runs-on: [self-hosted, Linux, X64, DockerMgBuild]
    timeout-minutes: 60
    steps:
      - name: Set up repository
        uses: actions/checkout@v4
        with:
          ref: ${{ inputs.ref || github.ref }}
          fetch-depth: 0

      - name: Log in to Docker Hub
        uses: ./.github/actions/docker-login
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Spin up mgbuild container
        run: |
          ./release/package/mgbuild.sh \
          --toolchain $TOOLCHAIN \
          --os $OS \
          --arch $ARCH \
          run

      - name: Build release binary
        run: |
          ./release/package/mgbuild.sh \
          --toolchain $TOOLCHAIN \
          --os $OS \
          --arch $ARCH \
          --build-type $BUILD_TYPE \
          build-memgraph

      - name: Initialize tests
        run: |
          ./release/package/mgbuild.sh \
          --toolchain $TOOLCHAIN \
          --os $OS \
          --arch $ARCH \
          init-tests

      - name: Run stress test (plain)
        run: |
          ./release/package/mgbuild.sh \
          --toolchain $TOOLCHAIN \
          --os $OS \
          --arch $ARCH \
          --enterprise-license $MEMGRAPH_ENTERPRISE_LICENSE \
          --organization-name $MEMGRAPH_ORGANIZATION_NAME \
          test-memgraph stress-plain

      - name: Run stress test (SSL)
        run: |
          ./release/package/mgbuild.sh \
          --toolchain $TOOLCHAIN \
          --os $OS \
          --arch $ARCH \
          --enterprise-license $MEMGRAPH_ENTERPRISE_LICENSE \
          --organization-name $MEMGRAPH_ORGANIZATION_NAME \
          test-memgraph stress-ssl

      - name: Run durability test (plain)
        run: |
          ./release/package/mgbuild.sh \
          --toolchain $TOOLCHAIN \
          --os $OS \
          --arch $ARCH \
          --enterprise-license $MEMGRAPH_ENTERPRISE_LICENSE \
          --organization-name $MEMGRAPH_ORGANIZATION_NAME \
          test-memgraph durability

      - name: Run durability test (large)
        run: |
          ./release/package/mgbuild.sh \
          --toolchain $TOOLCHAIN \
          --os $OS \
          --arch $ARCH \
          --enterprise-license $MEMGRAPH_ENTERPRISE_LICENSE \
          --organization-name $MEMGRAPH_ORGANIZATION_NAME \
          test-memgraph durability-large

      - name: Copy stress and durability test logs
        if: failure()
        run: |
          ./release/package/mgbuild.sh \
          --toolchain $TOOLCHAIN \
          --os $OS \
          --arch $ARCH \
          copy --logs-dir /home/mg/memgraph/tests/stress --dest-dir build/stress/logs

          # Also copy durability test logs from build directory
          ./release/package/mgbuild.sh \
          --toolchain $TOOLCHAIN \
          --os $OS \
          --arch $ARCH \
          copy --logs-dir /home/mg/memgraph/build --dest-dir build/stress/logs

      - name: Save stress and durability test logs
        continue-on-error: true
        uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: "Stress and Durability Test Logs-${{ inputs.run_id }}"
          path: build/stress/logs

      - name: Stop mgbuild container
        if: always()
        run: |
          ./release/package/mgbuild.sh \
          --toolchain $TOOLCHAIN \
          --os $OS \
          --arch $ARCH \
          stop --remove

      - name: Clean up Docker
        if: always()
        continue-on-error: true
        run: |
          ./tools/docker_cleanup.sh

  query_modules:
    if: ${{ inputs.run_query_modules == 'true' }}
    name: "Query modules tests"
    runs-on: [self-hosted, Linux, X64, DockerMgBuild]
    timeout-minutes: 60
    steps:
      - name: Set up repository
        uses: actions/checkout@v4
        with:
          ref: ${{ inputs.ref || github.ref }}
          fetch-depth: 0

      - name: Log in to Docker Hub
        uses: ./.github/actions/docker-login
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Spin up mgbuild container
        run: |
          ./release/package/mgbuild.sh \
          --toolchain $TOOLCHAIN \
          --os $OS \
          --arch $ARCH \
          run

      - name: Build release binary
        run: |
          ./release/package/mgbuild.sh \
          --toolchain $TOOLCHAIN \
          --os $OS \
          --arch $ARCH \
          --build-type $BUILD_TYPE \
          build-memgraph

      - name: Initialize tests
        run: |
          ./release/package/mgbuild.sh \
          --toolchain $TOOLCHAIN \
          --os $OS \
          --arch $ARCH \
          init-tests

      - name: Run query modules e2e tests
        run: |
          ./release/package/mgbuild.sh \
          --toolchain $TOOLCHAIN \
          --os $OS \
          --arch $ARCH \
          --enterprise-license $MEMGRAPH_ENTERPRISE_LICENSE \
          --organization-name $MEMGRAPH_ORGANIZATION_NAME \
          test-memgraph query_modules_e2e

      - name: Copy memgraph logs
        if: failure()
        run: |
          ./release/package/mgbuild.sh \
          --toolchain $TOOLCHAIN \
          --os $OS \
          --arch $ARCH \
          copy --memgraph-logs --dest-dir build/memgraph-logs-query-modules

      - name: Save test data
        continue-on-error: true
        uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: "Query modules tests(Release build)-${{ github.run_id }}"
          path: build/memgraph-logs-query-modules

      - name: Stop mgbuild container
        if: always()
        run: |
          ./release/package/mgbuild.sh \
          --toolchain $TOOLCHAIN \
          --os $OS \
          --arch $ARCH \
          stop --remove

      - name: Clean up Docker
        if: always()
        continue-on-error: true
        run: |
          ./tools/docker_cleanup.sh
