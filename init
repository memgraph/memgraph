#!/bin/bash -e

DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"
cd "$DIR"

source "$DIR/environment/util.sh"

function print_help () {
    echo "Usage: $0 [OPTION]"
    echo -e "Check for missing packages and setup the project.\n"
    echo "Optional arguments:"
    echo -e "  -h\t\t\t\t\tdisplay this help and exit"
    echo -e "  --wsl-quicklisp-proxy \"host:port\"\tquicklist HTTP proxy (this flag + HTTP proxy are required on WSL)"
}

function setup_virtualenv () {
    pushd $1 > /dev/null
    echo "Setting up virtualenv for: $1"

    # remove old virtualenv
    if [ -d ve3 ]; then
        rm -rf ve3
    fi

    # create new virtualenv
    virtualenv -p python3 ve3 || exit 1
    source ve3/bin/activate
    pip --timeout 1000 install -r requirements.txt || exit 1
    deactivate

    popd > /dev/null
}

wsl_quicklisp_proxy=""
if [[ $# -gt 2 ]]; then
    print_help
    exit 1
elif  [[ $# -eq 2 ]]; then
    case "$1" in
      --wsl-quicklisp-proxy)
          shift
          wsl_quicklisp_proxy=":proxy \"http://$1/\""
          shift
      ;;
      *)
          # unknown option
          print_help
          exit 1
      ;;
    esac
elif  [[ $# -eq 1 ]]; then
    case "$1" in
      -h)
          print_help
          exit 0
      ;;
      *)
          # unknown option
          print_help
          exit 1
      ;;
  esac
fi

DISTRO=$(operating_system)
echo "ALL BUILD PACKAGES: $($DIR/environment/os/$DISTRO.sh list MEMGRAPH_BUILD_DEPS)"
$DIR/environment/os/$DISTRO.sh check MEMGRAPH_BUILD_DEPS
echo "All packages are in-place..."

# create a default build directory
mkdir -p ./build

# quicklisp package manager for Common Lisp
quicklisp_install_dir="$HOME/quicklisp"
if [[ -v QUICKLISP_HOME ]]; then
  quicklisp_install_dir="${QUICKLISP_HOME}"
fi

if [[ ! -f "${quicklisp_install_dir}/setup.lisp" ]]; then
  wget -nv https://beta.quicklisp.org/quicklisp.lisp -O quicklisp.lisp || exit 1
  echo \
  "
  (load \"${DIR}/quicklisp.lisp\")
  (quicklisp-quickstart:install $wsl_quicklisp_proxy :path \"${quicklisp_install_dir}\")
  " | sbcl --script || exit 1
  rm -rf quicklisp.lisp || exit 1
fi
ln -Tfs "$DIR/src/lisp" "${quicklisp_install_dir}/local-projects/lcp"
# Install LCP dependencies
# TODO: We should at some point cache or have a mirror of packages we use.
# TODO: move the installation of LCP's dependencies into ./setup.sh
echo \
  "
  (load \"${quicklisp_install_dir}/setup.lisp\")
  (ql:quickload '(:lcp :lcp/test) :silent t)
  " | sbcl --script

# Setup libs (download).
cd libs
./cleanup.sh
./setup.sh
cd ..

# setup gql_behave dependencies
setup_virtualenv tests/gql_behave

# setup stress dependencies
setup_virtualenv tests/stress

# setup integration/ldap dependencies
setup_virtualenv tests/integration/ldap

# Setup tests dependencies.
# cd tests
# ./setup.sh
# cd ..
# TODO(gitbuda): Remove setup_virtualenv, replace it with tests/ve3. Take care
# of the build order because tests/setup.py builds pymgclient which depends on
# mgclient which is build after this script by calling make.

echo "Done installing dependencies for Memgraph"

echo "Linking git hooks"
for hook in $(find $DIR/.githooks -type f -printf "%f\n"); do
  ln -s -f "$DIR/.githooks/$hook" "$DIR/.git/hooks/$hook"
  echo "Added $hook hook"
done;
